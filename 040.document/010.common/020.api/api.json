{
    "openapi": "3.0.2",
    "info": {
        "title": "Pomodoro-Timerバックエンド",
        "version": "0.1.0"
    },
    "paths": {
        "/task": {
            "get": {
                "tags": [
                    "task"
                ],
                "summary": "Fetch Task",
                "description": "\n        ユーザIDに紐づくタスク一覧（完了済み/未済問わず）を取得する。\n        また、当該タスク一覧の中で、ルートタスクに該当するタスクIDの一覧を取得する\n        ",
                "operationId": "fetch_task_task_get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Userid",
                            "type": "string"
                        },
                        "name": "userId",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "task"
                ],
                "summary": "Register Task",
                "description": "\n        タスクを新規に登録する。\n        IDはuuidによって一意に登録される。\n        親タスクの作業見積時間の再計算が行われる。\n        ",
                "operationId": "register_task_task_post",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Userid",
                            "type": "string"
                        },
                        "name": "userId",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterTaskRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/task/{id}": {
            "put": {
                "tags": [
                    "task"
                ],
                "summary": "Update Task",
                "description": "\n        タスクのデータを更新する。\n        親タスクの作業見積時間の再計算が行われる。\n        あるタスクを完了に変更した場合、その子タスクも完了にする。\n        \n        ",
                "operationId": "update_task_task__id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Id",
                            "type": "string"
                        },
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Userid",
                            "type": "string"
                        },
                        "name": "userId",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTaskRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Fetch User",
                "description": "\n        ユーザ情報を取得する\n        ",
                "operationId": "fetch_user_user_get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Userid",
                            "type": "string"
                        },
                        "name": "userId",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Update User",
                "description": "\n        ユーザ情報を更新する\n        ",
                "operationId": "update_user_user_put",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Userid",
                            "type": "string"
                        },
                        "name": "userId",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Update User",
                "description": "\n        ユーザ情報を初期登録する。\n        実APIとして呼び出される想定はないが、WebSocket通信が開始した際に当該ユーザが存在しない場合に本ユースケースが走る\n        ",
                "operationId": "update_user_user_post",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Userid",
                            "type": "string"
                        },
                        "name": "userId",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/event": {
            "post": {
                "tags": [
                    "event"
                ],
                "summary": "Register Event",
                "description": "\n        作業情報を登録する。当該タスクとその親タスクの作業時間の再計算が行われる。\n        ",
                "operationId": "register_event_event_post",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Userid",
                            "type": "string"
                        },
                        "name": "userId",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterEvent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Calender": {
                "title": "Calender",
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                }
            },
            "DefaultLength": {
                "title": "DefaultLength",
                "required": [
                    "work",
                    "rest"
                ],
                "type": "object",
                "properties": {
                    "work": {
                        "title": "Work",
                        "type": "integer"
                    },
                    "rest": {
                        "title": "Rest",
                        "type": "integer"
                    }
                }
            },
            "GoogleConfig": {
                "title": "GoogleConfig",
                "required": [
                    "calendar",
                    "taskList"
                ],
                "type": "object",
                "properties": {
                    "calendar": {
                        "$ref": "#/components/schemas/Calender"
                    },
                    "taskList": {
                        "$ref": "#/components/schemas/TaskList"
                    }
                }
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "RegisterEvent": {
                "title": "RegisterEvent",
                "required": [
                    "taskId",
                    "start",
                    "end"
                ],
                "type": "object",
                "properties": {
                    "taskId": {
                        "title": "Taskid",
                        "type": "string"
                    },
                    "start": {
                        "title": "Start",
                        "type": "string",
                        "format": "date-time"
                    },
                    "end": {
                        "title": "End",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "RegisterTaskRequest": {
                "title": "RegisterTaskRequest",
                "required": [
                    "parentId",
                    "name",
                    "estimatedWorkload",
                    "deadline",
                    "notes"
                ],
                "type": "object",
                "properties": {
                    "parentId": {
                        "title": "Parentid",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "estimatedWorkload": {
                        "title": "Estimatedworkload",
                        "type": "integer"
                    },
                    "deadline": {
                        "title": "Deadline",
                        "type": "string",
                        "format": "date"
                    },
                    "notes": {
                        "title": "Notes",
                        "type": "string"
                    }
                }
            },
            "Task": {
                "title": "Task",
                "required": [
                    "id",
                    "taskData"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "taskData": {
                        "$ref": "#/components/schemas/TaskData"
                    }
                }
            },
            "TaskData": {
                "title": "TaskData",
                "required": [
                    "name",
                    "childrenIdList",
                    "done",
                    "finishedWorkload",
                    "estimatedWorkload",
                    "deadline",
                    "notes"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "childrenIdList": {
                        "title": "Childrenidlist",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "done": {
                        "title": "Done",
                        "type": "boolean"
                    },
                    "finishedWorkload": {
                        "title": "Finishedworkload",
                        "type": "integer"
                    },
                    "estimatedWorkload": {
                        "title": "Estimatedworkload",
                        "type": "integer"
                    },
                    "deadline": {
                        "title": "Deadline",
                        "type": "string",
                        "format": "date"
                    },
                    "notes": {
                        "title": "Notes",
                        "type": "string"
                    }
                }
            },
            "TaskList": {
                "title": "TaskList",
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                }
            },
            "TaskResponse": {
                "title": "TaskResponse",
                "required": [
                    "task",
                    "rootTaskId"
                ],
                "type": "object",
                "properties": {
                    "task": {
                        "title": "Task",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        }
                    },
                    "rootTaskId": {
                        "title": "Roottaskid",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "UpdateTaskRequest": {
                "title": "UpdateTaskRequest",
                "required": [
                    "name",
                    "deadline",
                    "notes",
                    "done"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "deadline": {
                        "title": "Deadline",
                        "type": "string",
                        "format": "date"
                    },
                    "notes": {
                        "title": "Notes",
                        "type": "string"
                    },
                    "done": {
                        "title": "Done",
                        "type": "boolean"
                    }
                }
            },
            "UserModel": {
                "title": "UserModel",
                "required": [
                    "isGoogleLinked",
                    "googleConfig",
                    "defaultLength"
                ],
                "type": "object",
                "properties": {
                    "isGoogleLinked": {
                        "title": "Isgooglelinked",
                        "type": "boolean"
                    },
                    "googleConfig": {
                        "$ref": "#/components/schemas/GoogleConfig"
                    },
                    "defaultLength": {
                        "$ref": "#/components/schemas/DefaultLength"
                    }
                }
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            }
        }
    }
}